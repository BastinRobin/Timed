/**
 * Timed, @version 1.0
 * Copyright (c) 2011 Jarvis Badgley, Arthur Klepchukov
 * Licensed under the 3-clause BSD license
 */
!function(d,n){var e={delay:4,units:"milliseconds"};var c=1,k=c*1000,g=k*60,p=g*60,m=p*24;var o={millisecond:c,milliseconds:c,ms:c,second:k,seconds:k,sec:k,secs:k,s:k,minute:g,minutes:g,min:g,mins:g,m:g,hour:p,hours:p,hr:p,hrs:p,h:p,day:m,days:m,d:m};function i(r,s){if(typeof s[0]==="string"){r.delay=parseFloat(s[0],10);}else{r.delay=s[0];}if(typeof r.delay!=="number"||isNaN(r.delay)){throw ("Timed.after and Timed.every - Require a numerical delay as the 1st argument");}return r;}function l(r,s){if(typeof s[0]==="string"&&r.delay!==null){r.units=s[0].replace(r.delay,"")||null;}if(typeof s[1]==="string"){r.units=s[1];}if(r.units===null&&s.length===2){r.units=e.units;}if(typeof o[r.units]!=="number"){throw ("Timed.after and Timed.every - Require a valid unit of time as the 2nd argument");}return r;}function b(r,s){r.callback=s[s.length-1];if(typeof r.callback!=="function"){throw ("Timed.after and Timed.every - Require a callback as the last argument");}return r;}function f(){var r={delay:null,units:null,when:null,callback:null};if(arguments.length<2||arguments.length>3){throw ("Timed.after and Timed.every - Accept only 2 or 3 arguments");}r=i(r,arguments);r=l(r,arguments);r=b(r,arguments);if(r.delay<e.delay&&r.units===e.units){r.delay=e.delay;}if(r.delay<0){r.delay=e.delay;r.units=e.units;}r.when=r.delay*o[r.units];return r;}var j={after:function a(){var r=f.apply(this,arguments);return setTimeout(r.callback,r.when);},every:function h(){var r=f.apply(this,arguments);return setInterval(r.callback,r.when);}};var q=d.Timed;j.noConflict=function(){d.Timed=q;return this;};d.Timed=j;}(this,document);